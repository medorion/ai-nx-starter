import { Injectable } from '@nestjs/common';
import { SyncServiceFlowDto, FlowStatus } from '@medorion/types';
import { SyncServiceFlow } from '@medorion/data-access-layer';

@Injectable()
export class SyncServiceFlowMapperService {
  /**
   * Maps a SyncServiceFlow entity to SyncServiceFlowDto
   */
  toDto(flow: SyncServiceFlow): SyncServiceFlowDto {
    return {
      id: flow._id?.toString(),
      flowId: flow.flowId,
      messageId: flow.messageId,
      orgCode: flow.orgCode,
      snapshot: flow.snapshot,
      startTime: flow.startTime,
      createdAt: flow.createdAt,
      endTime: flow.endTime,
      status: flow.status as FlowStatus,
      flowDefinition: flow.flowDefinition,
      errors: flow.errors,
      runBy: flow.runBy,
      externalId: flow.externalId,
      output: flow.output,
    };
  }

  /**
   * Maps multiple SyncServiceFlow entities to SyncServiceFlowDto array
   */
  toDtoArray(flows: SyncServiceFlow[]): SyncServiceFlowDto[] {
    return flows.map((flow) => this.toDto(flow));
  }

  /**
   * Maps a SyncServiceFlowDto to SyncServiceFlow entity
   * Note: Does not set the _id field as it's auto-generated by MongoDB
   */
  toEntity(dto: SyncServiceFlowDto): Omit<SyncServiceFlow, '_id' | 'id' | 'createdAt'> {
    return {
      flowId: dto.flowId,
      messageId: dto.messageId,
      orgCode: dto.orgCode,
      snapshot: dto.snapshot,
      startTime: dto.startTime,
      endTime: dto.endTime,
      status: dto.status,
      flowDefinition: dto.flowDefinition,
      errors: dto.errors || [],
      runBy: dto.runBy,
      externalId: dto.externalId,
      output: dto.output,
    };
  }
}
