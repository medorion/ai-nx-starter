version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-nx-starter-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_nx_starter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-nx-starter-network

  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: ai-nx-starter-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: ai_nx_starter
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-nx-starter-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-nx-starter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-nx-starter-network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-nx-starter-app
    environment:
      NODE_ENV: production
      PORT: 3030
      # Database connections
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_nx_starter
      MONGO_URI: mongodb://admin:admin@mongodb:27017/ai_nx_starter?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      # Application settings
      LOG_LEVEL: info
      TIME_BEFORE_SESSION_EXPIRE_MS: 2101350
      SERVER_TOKEN_EXPIRATION_MS: 7800000
    ports:
      - "3030:3030"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ai-nx-starter-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  ai-nx-starter-network:
    driver: bridge
